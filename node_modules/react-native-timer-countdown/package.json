{
  "_args": [
    [
      {
        "raw": "react-native-timer-countdown",
        "scope": null,
        "escapedName": "react-native-timer-countdown",
        "name": "react-native-timer-countdown",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/marcos/ghostrepellent"
    ]
  ],
  "_from": "react-native-timer-countdown@latest",
  "_id": "react-native-timer-countdown@2.0.3",
  "_inCache": true,
  "_location": "/react-native-timer-countdown",
  "_nodeVersion": "8.11.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-timer-countdown_2.0.3_1533124226932_0.7127983071100741"
  },
  "_npmUser": {
    "name": "noelyoo",
    "email": "innovation.noel@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-timer-countdown",
    "scope": null,
    "escapedName": "react-native-timer-countdown",
    "name": "react-native-timer-countdown",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-timer-countdown/-/react-native-timer-countdown-2.0.3.tgz",
  "_shasum": "84866bf2dc0cdcec27d148290a8fd8977004d5ef",
  "_shrinkwrap": null,
  "_spec": "react-native-timer-countdown",
  "_where": "/Users/marcos/ghostrepellent",
  "author": {
    "name": "Noel Yoo"
  },
  "bugs": {
    "url": "https://github.com/avid21/react-native-timer-countdown/issues"
  },
  "dependencies": {},
  "description": "A simple customizable countdown component for React Native",
  "devDependencies": {
    "@babel/cli": "^7.0.0-beta.49",
    "@babel/core": "^7.0.0-beta.49",
    "@babel/plugin-proposal-class-properties": "^7.0.0-beta.49",
    "@babel/plugin-proposal-object-rest-spread": "^7.0.0-beta.49",
    "@babel/preset-env": "^7.0.0-beta.49",
    "@babel/preset-react": "^7.0.0-beta.49",
    "@babel/preset-typescript": "^7.0.0-beta.49",
    "@types/node": "^10.5.2",
    "@types/react": "^16.0.5",
    "@types/react-dom": "16.0.3",
    "@types/react-native": "^0.56.4",
    "prettier": "1.13.7",
    "tslint": "^5.11.0",
    "tslint-config-prettier": "^1.14.0",
    "tslint-eslint-rules": "^5.3.1",
    "typescript": "^2.9.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-sM3lGMCoY25ALaz/kaDbOrNtpyGXdkU3IBTxVE4iu3fYeXJU6R9OltNZKhKvst7MS4/2wPDC/AWMeq+eHPEKrw==",
    "shasum": "84866bf2dc0cdcec27d148290a8fd8977004d5ef",
    "tarball": "https://registry.npmjs.org/react-native-timer-countdown/-/react-native-timer-countdown-2.0.3.tgz",
    "fileCount": 14,
    "unpackedSize": 20788,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbYZ6DCRA9TVsSAnZWagAAIssP/RvM4Z4XYzWBGTbtjFeC\nsaajP3EzhfkhwJbhZWcxwswiqsoCGDydr87NEertJhKu+zAmtNNJ/uH8FI6q\nxI25wMgeJuczOwPX/Z92tlVtHgjEda2E2x5/ZON/7KTLXDn21WhQ+UNbJBtW\nhY0LP+J9KCnmkPwje+s4kzSXQJZdtgwbh3yQ7duJXn4LM8mMAxebZnKKEVXx\nz9GNI+xnAy5+/K9Y9kT7UOs0yhvu3stUpkwy9J0ptqiHnCjGpTAG1x2mffXY\nP0FHdtkRyDa5N3neibEFutmZ5LB/UNRvbpSMikfii/Oqs0p8ugVkVNLodKMb\nShaSa0VixEqduHq4lpnNgj/qfR+YXbJqtiCz1WbzzAgSbGJLb6EW443qB9wO\nlbunU6dcEhTnkXy5z1C2XNZSflZ+n79O0JZkHVib66qTKYj8xJZOGBIU6bJ5\na8ndnUwTuWRyFyxXjRQ+Q1+16x+NdSJT8cQ4saNUyMvIE8zxAdbl+bzlOHF4\nmWOA58CPklAEBYMZZkCW4fmFSiOMVjKp5mXqHrv6MQsWtc1sPcau8aVbHVTH\nNqO5SvXln5YqsAelb3PCQIOBoWgjC16VGbL4TL3XOT1Mh6TK7hgLbujhcexW\ngHmbXtWIL6DcY5+dn7o8m+5EfO7nl9DPA8R8jttkMA5oY+OHqwN1fgbQWJZp\nMBj7\r\n=MHo+\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "4866cac8f4c4b477f423699a124f7562f1368fe4",
  "homepage": "https://github.com/avid21/react-native-timer-countdown#readme",
  "keywords": [
    "countdown",
    "react-native",
    "timer"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "avid21",
      "email": "noel@getmiso.com"
    }
  ],
  "name": "react-native-timer-countdown",
  "optionalDependencies": {},
  "readme": "[![npm version](https://badge.fury.io/js/react-native-timer-countdown.svg)](https://badge.fury.io/js/react-native-timer-countdown)\n[![Packagist](https://img.shields.io/packagist/l/doctrine/orm.svg)](https://www.npmjs.com/package/react-native-timer-countdown)\n\n# React Native Timer Countdown\n\nA customizable countdown component for React Native (iOS and Android).\n\n## Install\n\n```sh\nnpm install --save react-native-timer-countdown\n```\n\nor\n\n```sh\nyarn add react-native-timer-countdown\n```\n\n## Usage\n\n```javascript\nimport TimerCountdown from 'react-native-timer-countdown';\n\nrender() {\n    return (\n        <TimerCountdown\n            initialSecondsRemaining={1000*60}\n            onTick={secondsRemaining => console.log('tick', secondsRemaining)}\n            onTimeElapsed={() => console.log('complete')}\n            allowFontScaling={true}\n            style={{ fontSize: 20 }}\n        />\n    )\n}\n```\n\n## Props\n\n| Name | Description | Type | Required | Default Value |\n| :--- | :----- | :--- | :---: | :---: |\n| initialSecondsRemaining | The time remaining for the countdown (in ms) | number | âœ“ |  |\n| interval | The time between timer ticks (in ms). | number |  | 1000ms |\n| allowFontScaling | to allow font scaling | bool |  | false |\n| style | The custom styling which will be applied to the Text component | style |  |  |\n| formatSecondsRemaining | A function that formats the secondsRemaining | func | | |\n| onTick | A function to call each tick. It returns the remaining seconds. | func | | |\n| onTimeElapsed | A function to call when the countdown completes | func |  | |\n\n## FAQ\n\n### Why does this timer restart whenever I click any button?\n\n#### What's happening\n\nbuttons clicked -> state changes -> react rerenders -> timer restarts\n\n#### How to not to restart the timer component\n\nProvided the state changes only occur in component B, A component will not rerender. As a result, no more unintended timer restarts.\n\n```javascript\nimport React, { Component } from \"react\";\nimport { StyleSheet, Button, View } from \"react-native\";\nimport TimerCountdown from \"./TimerCountdown\";\n\nconst A = () => (\n  <View style={styles.container}>\n    <B />\n    <Timer />\n  </View>\n);\nexport default A;\n\nclass B extends Component {\n  state = { isPressed: false };\n  render() {\n    return (\n      <View styles={{ flex: 1 }}>\n        <Button\n          title={`${this.state.isPressed ? \"Button Pressed\" : \"Button\"}`}\n          onPress={() => {\n            this.setState({ isPressed: true });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nconst Timer = () => (\n  <TimerCountdown\n    initialSecondsRemaining={1000 * 60}\n    onTick={secondsRemaining => console.log(\"tick\", secondsRemaining)}\n    onTimeElapsed={() => console.log(\"complete\")}\n    allowFontScaling={true}\n    style={{ fontSize: 20 }}\n  />\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n```\n\n## Author\n\nNoel Yoo\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/avid21/react-native-timer-countdown.git"
  },
  "scripts": {
    "build": "npm run ci && tsc",
    "ci": "npm run type-check && npm run lint && npm run prettier",
    "lint": "tslint --project tsconfig.json --format stylish",
    "prettier": "prettier --write '**/*.{ts,tsx,js}' --config .prettierrc",
    "type-check": "tsc --noEmit"
  },
  "version": "2.0.3"
}
