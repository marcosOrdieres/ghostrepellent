{
  "_args": [
    [
      {
        "raw": "react-native-sound",
        "scope": null,
        "escapedName": "react-native-sound",
        "name": "react-native-sound",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/marcos/ghostrepellant"
    ]
  ],
  "_from": "react-native-sound",
  "_hasShrinkwrap": false,
  "_id": "react-native-sound@0.10.12",
  "_location": "/react-native-sound",
  "_nodeVersion": "6.9.5",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-sound_0.10.12_1549174297488_0.17993587946603817"
  },
  "_npmUser": {
    "name": "zmxv",
    "email": "z@zmxv.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-sound",
    "scope": null,
    "escapedName": "react-native-sound",
    "name": "react-native-sound",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-sound/-/react-native-sound-0.10.12.tgz",
  "_shasum": "f912d6f9d6e9e2b42b391e0226787628d940f01a",
  "_shrinkwrap": null,
  "_spec": "react-native-sound",
  "_where": "/Users/marcos/ghostrepellant",
  "author": {
    "name": "Zhen Wang",
    "email": "z@zmxv.com",
    "url": "http://blog.zmxv.com"
  },
  "bugs": {
    "url": "https://github.com/zmxv/react-native-sound/issues"
  },
  "dependencies": {},
  "description": "React Native module for playing sound clips on iOS, Android, and Windows",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "f912d6f9d6e9e2b42b391e0226787628d940f01a",
    "tarball": "https://registry.npmjs.org/react-native-sound/-/react-native-sound-0.10.12.tgz",
    "integrity": "sha512-lhvzZ+ekNSHW9s4FjmxxGAQmd7yDT9FnHgJNP824cMyHRrTES/LgHnSOxES/1FWVoaQ8FdfbEHkWd2rN0G/L9A==",
    "fileCount": 1784,
    "unpackedSize": 31629375,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcVoYaCRA9TVsSAnZWagAAqG4QAJUjd2sly3JU3Rk6vOse\neXXPuCTxxZrOb233rj71pVobjBSJpsWnrq/uxirBJy4RfYgQgxmZe7yLSssv\ndAol5rPUZuD6jYxGYccemjfCDOxyVul3e0Om3PuDL1NCEzjKSh5Of9zlW3pN\nDDiIKb9yIDdWeTrDPP+rcUq6iJBA3C8iVtkPoatot6Ufqolz08hbDaGZOlis\nMRwulTYOjPzAXZI/J39ewNCqZpJu1qRv++7FYbKFgwgxm8BxVkX2h3QhQ3p/\niel40BXcb8dByqzrYic+bRExfQhxUa60K6E63TZGSVc2WXrBb94BcW4dqcyy\nInVFyKJaQQxo8YNyFszIenb05sCNqbR65JpSxRrBYuy6VKnQRrG5JaGtOs8+\nzIE6RlFjxKDtqovdD0c9GPb20pHu9sLG15/1Y4AwesuXMc5GYJKW43p1D7kO\nNiiIclxG+UFquU05n/chGUqxjRyt6+DhMp5mmBH75KIjHl6nE/XJiwHieKW4\ngvRbzacBu6okUSfo6nfd5eJhsuvCz48TfhsdMoRsHcNruB5W5+2J+ZWfdcCG\nISR6ICS17JeC2FtIp1uvBc9ttebRp4z3rv9fwm6JdZ29R1hrdfTzJwCfP5fT\nTdr/vY4mDbyROTy1XXmqh41vqw4JHUlFYM6e9X0GZdut93ZtRV7pHQNA/pGG\nsIN8\r\n=qT8C\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "8360d7f6b15ba4c367096764d8e075bd37823c72",
  "homepage": "https://github.com/zmxv/react-native-sound#readme",
  "keywords": [
    "react-native",
    "react-component",
    "sound",
    "audio"
  ],
  "license": "MIT",
  "main": "sound.js",
  "maintainers": [
    {
      "name": "benvium",
      "email": "ben@calvium.com"
    },
    {
      "name": "trepidity",
      "email": "jared@jaredjennings.org"
    },
    {
      "name": "zmxv",
      "email": "z@zmxv.com"
    }
  ],
  "name": "react-native-sound",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-native": ">=0.8.0"
  },
  "readme": "# react-native-sound\n\nReact Native module for playing sound clips on iOS, Android, and Windows.\n\n'NOTE: React-native-sound does not support streaming'. See #353 for more info. Of course, we would welcome a PR if someone wants to take this on.\n\n## Feature matrix\n\nFeature | iOS | Android | Windows\n---|---|---|---\nLoad sound from the app bundle | ✓ | ✓ | ✓\nLoad sound from other directories | ✓ | ✓ | ✓\nLoad sound from the network | ✓ | ✓ |\nPlay sound | ✓ | ✓ | ✓\nPlayback completion callback | ✓ | ✓ | ✓\nPause | ✓ | ✓ | ✓\nResume | ✓ | ✓ | ✓\nStop | ✓ | ✓ | ✓\nReset |  | ✓ | \nRelease resource | ✓ | ✓ | ✓\nGet duration | ✓ | ✓ | ✓\nGet number of channels | ✓ |   |\nGet/set volume | ✓ | ✓ | ✓\nGet system volume | ✓ | ✓ |\nSet system volume |   | ✓ |\nGet/set pan | ✓ |   |\nGet/set loops | ✓ | ✓ | ✓\nGet/set current time | ✓ | ✓ | ✓\nSet speed | ✓ | ✓ |\n\n## Installation\n\nFirst install the npm package from your app directory:\n\n```javascript\nnpm install react-native-sound --save\n```\n\nThen link it automatically using:\n\n```javascript\nreact-native link react-native-sound\n```\n\n### Manual Installation Notes\n\nPlease see the Wiki for these details https://github.com/zmxv/react-native-sound/wiki/Installation\n\n\n## Help with React-Native-Sound\n* For react-native-sound developers  [![Gitter chat](https://badges.gitter.im/gitterHQ/services.png)](https://gitter.im/react-native-sound/developers)\n* For help using react-native-sound  [![Gitter chat](https://badges.gitter.im/gitterHQ/services.png)](https://gitter.im/react-native-sound/Help)\n\n## Demo project\n\nhttps://github.com/zmxv/react-native-sound-demo\n\n## Player\n\n<img src=\"https://github.com/benevbright/react-native-sound-playerview/blob/master/docs/demo.gif?raw=true\">\n\nhttps://github.com/benevbright/react-native-sound-playerview\n\n## Basic usage\n\nFirst you'll need to add audio files to your project.\n\n- Android: Save your sound clip files under the directory `android/app/src/main/res/raw`. Note that files in this directory must be lowercase and underscored (e.g. my_file_name.mp3) and that subdirectories are not supported by Android.\n- iOS: Open Xcode and add your sound files to the project (Right-click the project and select `Add Files to [PROJECTNAME]`)\n\n```js\n// Import the react-native-sound module\nvar Sound = require('react-native-sound');\n\n// Enable playback in silence mode\nSound.setCategory('Playback');\n\n// Load the sound file 'whoosh.mp3' from the app bundle\n// See notes below about preloading sounds within initialization code below.\nvar whoosh = new Sound('whoosh.mp3', Sound.MAIN_BUNDLE, (error) => {\n  if (error) {\n    console.log('failed to load the sound', error);\n    return;\n  }\n  // loaded successfully\n  console.log('duration in seconds: ' + whoosh.getDuration() + 'number of channels: ' + whoosh.getNumberOfChannels());\n  \n  // Play the sound with an onEnd callback\nwhoosh.play((success) => {\n  if (success) {\n    console.log('successfully finished playing');\n  } else {\n    console.log('playback failed due to audio decoding errors');\n  }\n});\n});\n\n// Reduce the volume by half\nwhoosh.setVolume(0.5);\n\n// Position the sound to the full right in a stereo field\nwhoosh.setPan(1);\n\n// Loop indefinitely until stop() is called\nwhoosh.setNumberOfLoops(-1);\n\n// Get properties of the player instance\nconsole.log('volume: ' + whoosh.getVolume());\nconsole.log('pan: ' + whoosh.getPan());\nconsole.log('loops: ' + whoosh.getNumberOfLoops());\n\n// Seek to a specific point in seconds\nwhoosh.setCurrentTime(2.5);\n\n// Get the current playback point in seconds\nwhoosh.getCurrentTime((seconds) => console.log('at ' + seconds));\n\n// Pause the sound\nwhoosh.pause();\n\n// Stop the sound and rewind to the beginning\nwhoosh.stop(() => {\n  // Note: If you want to play a sound after stopping and rewinding it,\n  // it is important to call play() in a callback.\n  whoosh.play();\n});\n\n// Release the audio player resource\nwhoosh.release();\n```\n\n## Notes\n- To minimize playback delay, you may want to preload a sound file without calling `play()` (e.g. `var s = new Sound(...);`) during app initialization. This also helps avoid a race condition where `play()` may be called before loading of the sound is complete, which results in no sound but no error because loading is still being processed.\n- You can play multiple sound files at the same time. Under the hood, this module uses `AVAudioSessionCategoryAmbient` to mix sounds on iOS.\n- You may reuse a `Sound` instance for multiple playbacks.\n- On iOS, the module wraps `AVAudioPlayer` that supports aac, aiff, mp3, wav etc. The full list of supported formats can be found at https://developer.apple.com/library/content/documentation/MusicAudio/Conceptual/CoreAudioOverview/SupportedAudioFormatsMacOSX/SupportedAudioFormatsMacOSX.html\n- On Android, the module wraps `android.media.MediaPlayer`. The full list of supported formats can be found at https://developer.android.com/guide/topics/media/media-formats.html\n- On Android, the absolute path can start with '/sdcard/'. So, if you want to access a sound called \"my_sound.mp3\" on Downloads folder, the absolute path will be: '/sdcard/Downloads/my_sound.mp3'.\n- You may chain non-getter calls, for example, `sound.setVolume(.5).setPan(.5).play()`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zmxv/react-native-sound.git"
  },
  "scripts": {},
  "typings": "index.d.ts",
  "version": "0.10.12"
}
