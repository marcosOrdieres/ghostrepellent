{
  "_args": [
    [
      {
        "raw": "react-native-admob@next",
        "scope": null,
        "escapedName": "react-native-admob",
        "name": "react-native-admob",
        "rawSpec": "next",
        "spec": "next",
        "type": "tag"
      },
      "/Users/marcos/ghostrepellent"
    ]
  ],
  "_from": "react-native-admob@next",
  "_id": "react-native-admob@2.0.0-beta.5",
  "_inCache": true,
  "_location": "/react-native-admob",
  "_nodeVersion": "8.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-admob_2.0.0-beta.5_1524857324087_0.6431095600237182"
  },
  "_npmUser": {
    "name": "koenpunt",
    "email": "mail@koen.pt"
  },
  "_npmVersion": "5.8.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-admob@next",
    "scope": null,
    "escapedName": "react-native-admob",
    "name": "react-native-admob",
    "rawSpec": "next",
    "spec": "next",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-admob/-/react-native-admob-2.0.0-beta.5.tgz",
  "_shasum": "f83fd6144c5dd3e708e937793f41c0c50db86682",
  "_shrinkwrap": null,
  "_spec": "react-native-admob@next",
  "_where": "/Users/marcos/ghostrepellent",
  "author": {
    "name": "Simon Bugert",
    "email": "simon.bugert@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/sbugert/react-native-admob/issues"
  },
  "dependencies": {
    "prop-types": "^15.5.10"
  },
  "description": "A react-native component for Google AdMob banners and interstitials",
  "devDependencies": {
    "babel-eslint": "^7.2.3",
    "eslint": "^4.3.0",
    "eslint-plugin-react": "^7.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-nESuBHqCgXZmR7yfwHB0nmsZUgjyWEkR4gsPx7hB2vB+pba+2MHUWD0nk4K85zsHxgJ9yNcJNGoQbqY8A1T9ow==",
    "shasum": "f83fd6144c5dd3e708e937793f41c0c50db86682",
    "tarball": "https://registry.npmjs.org/react-native-admob/-/react-native-admob-2.0.0-beta.5.tgz",
    "fileCount": 41,
    "unpackedSize": 151943,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa43ntCRA9TVsSAnZWagAAqA8P/iSC2l1npmY1q7RUn1jy\nOkBpOc/IRTxtE67s4hy6st6+4tITccWmN/+fXOoqtZvwgvqv3/K9W2x54Of3\nPRrqRIAaPNTZV4MzI1AU8xiwtJrsZHZm6MG5t2mNY3S2QEDLl/TeMqL8CSB4\nljrYfogiY95MByIIoRZSNgVbLm6oKyfLOHzpuJ5zPU2Z7iDvc129nEoKYvtr\nFAUSTj8+u+f2dr5AwiFolCd/Gv7h7n9qBM4Aia4QRC72TdHkDhgyyJcPRqpN\nh1kZrqUjLVpmjLMiEiH3CF8yczWnaDx+WFtGg7o24Q1UPhdMo42ThKAcKj1+\n6JY/1dnigfZFe8fc/Rz7DP9JSl+rWqcNY3R/23klCyickg8B/YgdjuWRsyWO\nphe2TDVMgw0PJsQpk5OsIvUXylNGt5CVQYwXLfWHTmizBFMrnLlSA73rpHyg\nbrJfJ+DOEpgE5/IbAKfTIb7j3m6AERLINPWaelJqvYjFhAs/38JqreK7r2kM\neV6iWFaZjFH/ip0Ori6QKPxnnGdaYFBV6I8zLrTa345EI8sN9oCzm9Lva2HU\noMWGS5vEStH/z2/9PP0z/c1+PYzxRp2n5H+NN8odJlDPUWTto5ntWggbEO6r\n0s8FRwFY5sfWY981HsYQDs44BthR6/0XL7gMrKqwqpE3iOvhPvDDaXaJH+is\nFGsT\r\n=9c2X\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "5dc25f952a29c4f1322cdcf29641acc0564ada93",
  "homepage": "https://github.com/sbugert/react-native-admob#readme",
  "license": "BSD-2-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "alvaromb",
      "email": "me@alvaromb.com"
    },
    {
      "name": "dkolba",
      "email": "duncankolba@gmail.com"
    },
    {
      "name": "koenpunt",
      "email": "mail@koen.pt"
    },
    {
      "name": "sbugert",
      "email": "simon.bugert@googlemail.com"
    }
  ],
  "name": "react-native-admob",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-native": ">=0.44.0"
  },
  "readme": "# react-native-admob [![npm](https://img.shields.io/npm/v/react-native-admob.svg)](https://www.npmjs.com/package/react-native-admob) [![npm (next)](https://img.shields.io/npm/v/react-native-admob/next.svg)](https://www.npmjs.com/package/react-native-admob)\n\n### ⚠️ Please note, the master branch tracks development of version 2 of this library, which is currently in beta. For version 1 please check out the [1.x branch](https://github.com/sbugert/react-native-admob/tree/1.x).\n\nA react-native module for Google AdMob Banners, Interstitials, and Rewarded Videos, and also DFP Banners.\n\nThe banner types are implemented as components while the interstitial and rewarded video have an imperative API.\n\n## Installation\n\nYou can use npm or Yarn to install the latest beta version:\n\n**npm:**\n\n    npm i --save react-native-admob@next\n\n**Yarn:**\n\n    yarn add react-native-admob@next\n\nIn order to use this library, you have to link it to your project first. There's excellent documentation on how to do this in the [React Native Docs](https://facebook.github.io/react-native/docs/linking-libraries-ios.html#content).\n\n### iOS\n\nFor iOS you will have to add the [Google Mobile Ads SDK](https://developers.google.com/admob/ios/quick-start#import_the_mobile_ads_sdk) to your Xcode project.\n\n### Android\n\nOn Android the AdMob library code is part of Play Services, which is automatically added when this library is linked.\n\n## Usage\n\n```jsx\nimport {\n  AdMobBanner,\n  AdMobInterstitial,\n  PublisherBanner,\n  AdMobRewarded,\n} from 'react-native-admob'\n\n// Display a banner\n<AdMobBanner\n  adSize=\"fullBanner\"\n  adUnitID=\"your-admob-unit-id\"\n  testDevices={[AdMobBanner.simulatorId]}\n  onAdFailedToLoad={error => console.error(error)}\n/>\n\n// Display a DFP Publisher banner\n<PublisherBanner\n  adSize=\"fullBanner\"\n  adUnitID=\"your-admob-unit-id\"\n  testDevices={[PublisherBanner.simulatorId]}\n  onAdFailedToLoad={error => console.error(error)}\n  onAppEvent={event => console.log(event.name, event.info)}\n/>\n\n// Display an interstitial\nAdMobInterstitial.setAdUnitID('your-admob-unit-id');\nAdMobInterstitial.setTestDevices([AdMobInterstitial.simulatorId]);\nAdMobInterstitial.requestAd().then(() => AdMobInterstitial.showAd());\n\n// Display a rewarded ad\nAdMobRewarded.setAdUnitID('your-admob-unit-id');\nAdMobRewarded.requestAd().then(() => AdMobRewarded.showAd());\n```\n\nFor a full example reference to the [example project](Example).\n\n## Reference\n\n### AdMobBanner\n\n#### Properties\n\n##### `adSize`\n\n*Corresponding to [iOS framework banner size constants](https://developers.google.com/admob/ios/banner)*\n\n<table>\n  <thead>\n    <tr>\n      <th>Value</th>\n      <th>Description</th>\n      <th>Availability</th>\n      <th>Size (WxH)</th>\n    </t>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>banner</code></td>\n      <td>Standard Banner</td>\n      <td>Phones and Tablets</td>\n      <td>320x50</td>\n    </tr>\n    <tr>\n      <td><code>largeBanner</code></td>\n      <td>Large Banner</td>\n      <td>Phones and Tablets</td>\n      <td>320x100</td>\n    </tr>\n    <tr>\n      <td><code>mediumRectangle</code></td>\n      <td>IAB Medium Rectangle</td>\n      <td>Phones and Tablets</td>\n      <td>300x250</td>\n    </tr>\n    <tr>\n      <td><code>fullBanner</code></td>\n      <td>IAB Full-Size Banner</td>\n      <td>Tablets</td>\n      <td>468x60</td>\n    </tr>\n    <tr>\n      <td><code>leaderboard</code></td>\n      <td>IAB Leaderboard</td>\n      <td>Tablets</td>\n      <td>728x90</td>\n    </tr>\n    <tr>\n      <td>\n        <code>smartBannerPortrait</code><br/>\n        <code>smartBannerLandscape</code>\n      </td>\n      <td>Smart Banner</td>\n      <td>Phones and Tablets</td>\n      <td>Screen width x 32|50|90</td>\n    </tr>\n  </tbody>\n</table>\n\n*Note: There is no `smartBannerPortrait` and `smartBannerLandscape` on Android. Both prop values will map to `smartBanner`*\n\n##### `onAdLoaded`\n\nAccepts a function. Called when an ad is received.\n\n##### `onAdFailedToLoad`\n\nAccepts a function. Called when an ad request failed.\n\n##### `onAdOpened`\n\nAccepts a function. Called when an ad opens an overlay that covers the screen.\n\n##### `onAdClosed`\n\nAccepts a function. Called when the user is about to return to the application after clicking on an ad.\n\n##### `onAdLeftApplication`\n\nAccepts a function. Called when a user click will open another app (such as the App Store), backgrounding the current app.\n\n##### `onSizeChange`\n\nAccepts a function. Called when the size of the banner changes. The function is called with an object containing the width and the height.\n\n\n*Above names correspond to the [Ad lifecycle event callbacks](https://developers.google.com/admob/android/banner#ad_events)*\n\n### PublisherBanner\n\n#### Properties\n\nSame as `AdMobBanner`, with the addition of 2 extra properties:\n\n##### `onAppEvent`\n\nAccepts a function. Called when DFP sends an event back to the app.\n\nThese events may occur at any time during the ad's lifecycle, even before `onAdLoaded` is called. The function is called with an object, containing the name of the event and an info property, containing additional information.\n\nMore info here: https://developers.google.com/mobile-ads-sdk/docs/dfp/ios/banner#app_events\n\n##### `validAdSizes`\n\nAn array of ad sizes which may be eligible to be served.\n\n### AdMobInterstitial\n\nIn comparison to the `AdMobBanner` and `PublisherBanner` which have a declaritive API, the `AdMobInterstitial` has an imperative API.\n\n#### Methods\n\n##### `setAdUnitID(adUnitID)`\n\nSets the AdUnit ID for all future ad requests.\n\n##### `setTestDevices(devices)`\n\nSets the devices which are served test ads.\n\n*For simulators/emulators you can use `AdMobInterstitial.simulatorId` for the test device ID.*\n\n##### `requestAd()`\n\nRequests an interstitial and returns a promise, which resolves on load and rejects on error.\n\n##### `showAd()`\n\nShows an interstitial and returns a promise, which resolves when an ad is going to be shown, rejects when the ad is not ready to be shown.\n\n##### `isReady(callback)`\n\nCalls callback with a boolean value whether the interstitial is ready to be shown.\n\n\n#### Events\n\nUnfortunately, events are not consistent across iOS and Android. To have one unified API, new event names are introduced for pairs that are roughly equivalent.\n\n<table>\n  <thead>\n    <tr>\n      <th>This library</th>\n      <th>iOS</th>\n      <th>Android</th>\n    </t>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>adLoaded</code></td>\n      <td><code>interstitialDidReceiveAd</code></td>\n      <td><code>onAdLoaded</code></td>\n    </tr>\n    <tr>\n      <td><code>adFailedToLoad</code></td>\n      <td><code>interstitial:didFailToReceiveAdWithError</code></td>\n      <td><code>onAdFailedToLoad</code></td>\n    </tr>\n    <tr>\n      <td><code>adOpened</code></td>\n      <td><code>interstitialWillPresentScreen</code></td>\n      <td><code>onAdOpened</code></td>\n    </tr>\n    <tr>\n      <td><code>adFailedToOpen</code></td>\n      <td><code>interstitialDidFailToPresentScreen</code></td>\n      <td><em>Not supported</em></td>\n    </tr>\n    <tr>\n      <td><code>adClosed</code></td>\n      <td><code>interstitialWillDismissScreen</code></td>\n      <td><code>onAdClosed</code></td>\n    </tr>\n    <tr>\n      <td><code>adLeftApplication</code></td>\n      <td><code>interstitialWillLeaveApplication</code></td>\n      <td><code>onAdLeftApplication</code></td>\n    </tr>\n  </tbody>\n</table>\n\n### AdMobRewarded\n\nIn comparison to the `AdMobBanner` and `PublisherBanner` which have a declaritive API, the `AdMobRewarded` has an imperative API, just like the `AdMobInterstitial`.\n\n#### Methods\n\n##### `setAdUnitID(adUnitID)`\n\nSets the AdUnit ID for all future ad requests.\n\n##### `setTestDevices(devices)`\n\nSets the devices which are served test ads.\n\n*For simulators/emulators you can use `AdMobRewarded.simulatorId` for the test device ID.*\n\n##### `requestAd()`\n\nRequests a rewarded ad and returns a promise, which resolves on load and rejects on error.\n\n##### `showAd()`\n\nShows a rewarded ad and returns a promise, which resolves when an ad is going to be shown, rejects when the ad is not ready to be shown.\n\n##### `isReady(callback)`\n\nCalls callback with a boolean value whether the rewarded ad is ready to be shown.\n\n#### Events\n\nUnfortunately, events are not consistent across iOS and Android. To have one unified API, new event names are introduced for pairs that are roughly equivalent.\n\n<table>\n  <thead>\n    <tr>\n      <th>This library</th>\n      <th>iOS</th>\n      <th>Android</th>\n    </t>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>adLoaded</code></td>\n      <td><code>rewardBasedVideoAdDidReceiveAd</code></td>\n      <td><code>onRewardedVideoAdLoaded</code></td>\n    </tr>\n    <tr>\n      <td><code>adFailedToLoad</code></td>\n      <td><code>rewardBasedVideoAd:didFailToLoadWithError</code></td>\n      <td><code>onRewardedVideoAdFailedToLoad</code></td>\n    </tr>\n    <tr>\n      <td><code>rewarded</code></td>\n      <td><code>rewardBasedVideoAd:didRewardUserWithReward</code></td>\n      <td><code>onRewarded</code></td>\n    </tr>\n    <tr>\n      <td><code>adOpened</code></td>\n      <td><code>rewardBasedVideoAdDidOpen</code></td>\n      <td><code>onRewardedVideoAdOpened</code></td>\n    </tr>\n    <tr>\n      <td><code>videoStarted</code></td>\n      <td><code>rewardBasedVideoAdDidStartPlaying</code></td>\n      <td><code>onRewardedVideoStarted</code></td>\n    </tr>\n    <tr>\n      <td><code>videoCompleted</code></td>\n      <td><code>rewardBasedVideoAdDidCompletePlaying</code></td>\n      <td><code>rewardedVideoAdVideoCompleted</code></td>\n    </tr>\n    <tr>\n      <td><code>adClosed</code></td>\n      <td><code>rewardBasedVideoAdDidClose</code></td>\n      <td><code>onRewardedVideoAdClosed</code></td>\n    </tr>\n    <tr>\n      <td><code>adLeftApplication</code></td>\n      <td><code>rewardBasedVideoAdWillLeaveApplication</code></td>\n      <td><code>onRewardedVideoAdLeftApplication</code></td>\n    </tr>\n  </tbody>\n</table>\n\n---\n\n## TODO\n\n- [ ] Support [Ad Targeting](https://developers.google.com/admob/ios/targeting) (RFC: [#166](https://github.com/sbugert/react-native-admob/pull/166))\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/sbugert/react-native-admob.git"
  },
  "version": "2.0.0-beta.5"
}
